receivers:
  nop:

processors:
  nop:

exporters:
  datadog:
    ## @param hostname - string - optional
    ## A custom hostname.
    ## If unset it will be determined from the `DD_HOST` environment variable (Deprecated: [v0.47.0] set environment variable explicitly on configuration instead).
    ## If both this and `DD_HOST` are unset, this will be determined automatically if possible.
    #
    # hostname: customhostname

    ## @param env - string - optional
    ## The environment for unified service tagging.
    ## Deprecated: [v0.49.0] Set `deployment.environment` semconv instead, see https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/9016 for details.
    ## This option will be removed in v0.52.0.
    ## If unset it will be determined from the `DD_ENV` environment variable (Deprecated: [v0.47.0] set environment variable explicitly on configuration instead).
    #
    # env: prod

    ## @param service - string - optional
    ## The service for unified service tagging.
    ## Deprecated: [v0.49.0] Set `service.name` semconv instead, see https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/8781 for details.
    ## This option will be removed in v0.52.0.
    ## If unset it will be determined from the `DD_SERVICE` environment variable (Deprecated: [v0.47.0] set environment variable explicitly on configuration instead).
    #
    # service: myservice

    ## @param version - string - optional
    ## The version for unified service tagging.
    ## Deprecated: [v0.49.0] Set `service.version` semconv instead, see https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/8783 for details.
    ## This option will be removed in v0.52.0.
    ## If unset it will be determined from the `DD_VERSION` environment variable (Deprecated: [v0.47.0] set environment variable explicitly on configuration instead).
    #
    # version: myversion

    ## @param tags - list of strings - optional - default: []
    ## The list of tags to send as host tags.
    ## Deprecated: [v0.49.0] Use `host_metadata::tags` instead.
    ## This option will be removed in v0.52.0.
    ## If unset it will be determined from the `DD_TAGS` environment variable, specified
    ## as a list of space-separated strings (Deprecated: [v0.47.0] use 'env' config source instead).
    #
    # tags: []

    ## @params send_metadata - boolean - optional - default: true
    ## Deprecated: [v0.49.0] Use `host_metadata::enabled` instead.
    ## This option will be removed in v0.52.0.
    #
    # send_metadata: true

    ## @params use_resource_metadata - boolean - optional - default: true
    ## Deprecated: [v0.49.0] Use `host_metadata::hostname_source` instead.
    ## This option will be removed in v0.52.0.
    # 
    # use_resource_metadata: true

    ## @param only_metadata - boolean - optional - default: false
    ## Whether to send only metadata. This is useful for agent-collector
    ## setups, so that metadata about a host is sent to the backend even
    ## when telemetry data is reported via a different host.
    #
    # only_metadata: false

    ## @param api - custom object - required.
    ## Specific API configuration.
    #
    api:
      ## @ param key - string - required
      ## The Datadog API key to associate your Agent's data with your organization.
      ## Create a new API key here: https://app.datadoghq.com/account/settings
      ## If unset it will be determined from the `DD_API_KEY` environment variable (Deprecated: [v0.47.0] set environment variable explicitly on configuration instead).
      #
      key: "<YOUR API KEY>"

      ## @param site - string - optional - default: datadoghq.com
      ## The site of the Datadog intake to send Agent data to.
      ## Set to 'datadoghq.eu' to send data to the EU site.
      ## If unset it will be determined from the `DD_SITE` environment variable (Deprecated: [v0.47.0] set environment variable explicitly on configuration instead).
      #
      # site: datadoghq.com

    ## @param tls - custom object - optional
    # TLS settings for HTTPS communications.
    # tls:
      ## @param tls - boolean - optional - default: false
      # insecure_skip_verify: false

    ## @param metrics - custom object - optional
    ## Metric exporter specific configuration.
    #
    # metrics:
      ## @param send_monotonic_counter - boolean - optional - default: true
      ## Deprecated: [v0.48.0] Use `metrics::sums::cumulative_monotonic_mode` instead.
      ## Whether to report monotonic metrics as counters or gauges (raw value).
      ## See https://docs.datadoghq.com/integrations/guide/prometheus-metrics/#counter
      ## for further details
      #
      # send_monotonic_counter: true

      ## @param - delta_ttl - integer - optional - default: 3600
      ## The amount of time (in seconds) that values are kept in memory for
      ## calculating deltas for cumulative monotonic metrics.
      #
      # delta_ttl: 3600

      ## @param endpoint - string - optional
      ## The host of the Datadog intake server to send metrics to.
      ## If unset it will be determined from the `DD_URL` environment variable (Deprecated: [v0.47.0] set environment variable explicitly on configuration instead).
      ## If both this and `DD_URL` are unset, the value is obtained through the `site` parameter in the `api` section.
      #
      # endpoint: https://api.datadoghq.com

      ## @param resource_attributes_as_tags - string - optional - default: false
      ## Set to true to add all resource attributes of a metric to its metric tags.
      ## When set to false, only a small predefined subset of resource attributes is converted
      ## to metric tags.
      #
      # resource_attributes_as_tags: false

      ## @param instrumentation_library_metadata_as_tags - string - optional - default: false
      ## Set to true to add metadata about the instrumentation library that created a metric.
      #
      # instrumentation_library_metadata_as_tags: false

      ## @param histograms - custom object - optional
      ## Histograms specific configuration.
        ## @param mode - string - optional - default: distributions
        ## How to report histograms. Valid values are:
        ## 
        ## - `distributions` to report metrics as Datadog distributions (recommended).
        ## - `nobuckets` to not report bucket metrics,
        ## - `counters` to report one metric per histogram bucket.
        #
        # mode: distributions
      
        ## @param send_count_sum_metrics - boolean - optional - default: false
        ## Whether to report sum and count as separate histogram metrics.
        #
        # send_count_sum_metrics: false
      
      ## @param sums - custom object - optional
      ## Sums specific configuration.
        ## @param cumulative_monotonic_mode - string - optional - default: to_delta
        ## How to report cumulative monotonic sums. Valid values are:
        ##
        ## - `to_delta` to calculate delta for sum in the client side and report as Datadog counts.
        ## - `raw_value` to report the raw value as a Datadog gauge.
        #
        # cumulative_monotonic_mode: to_delta

    ## @param traces - custom object - optional
    ## Trace exporter specific configuration.
    #
    # traces:
      ## @param sample_rate - integer - optional - default: 1
      #  The rate at which to sample traces. Default is 1 (Always Sample),
      #  meaning no sampling. If you want to send one event out of every 250
      #  you would specify 250.
      #
      # sample_rate: 1

      ## @param endpoint - string - optional
      ## The host of the Datadog intake server to send traces to.
      ## If unset it will be determined from the `DD_APM_URL` environment variable (Deprecated: [v0.47.0] set environment variable explicitly on configuration instead).
      ## If both this and `DD_APM_URL` are unset, the value is obtained through the `site` parameter in the `api` section.
      #
      # endpoint: https://api.datadoghq.com

      ## @param ignore_resources - list of strings - optional
      ## A blacklist of regular expressions can be provided to disable certain traces based on their resource name
      ## all entries must be surrounded by double quotes and separated by commas.
      #
      # ignore_resources: ["(GET|POST) /healthcheck"] 

      ## @param span_name_remappings - map of key/value pairs - optional
      ## A map of Datadog span operation name keys and preferred name valuues to update those names to. This can be used to
      ## automatically map Datadog Span Operation Names to an updated value, and is useful when a user wants to
      ## shorten or modify span names to something more user friendly in the case of instrumentation libraries with
      ## particularly verbose names.
      #
      # span_name_remappings: 
      #   io.opentelemetry.javaagent.spring.client: spring.client
      #   instrumentation:express.server: express
      #   go.opentelemetry.io_contrib_instrumentation_net_http_otelhttp.client: http.client

      ## @param span_name_as_resource_name - use OpenTelemetry semantic convention for span naming - optional
      ## Option created to maintain similarity with the OpenTelemetry semantic conventions as discussed in the issue below.
      ## https://github.com/open-telemetry/opentelemetry-specification/tree/main/specification/trace/semantic_conventions
      ## https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/1909
      #
      # span_name_as_resource_name: true
    
    ## @param host_metadata - custom object - optional
    ## Host metadata specific configuration.
    ## Host metadata is the information used for populating the infrastructure list, the host map and providing host tags functionality within the Datadog app.
    ##
    ## The exporter will only send host metadata for a single host, whose name is chosen
    ## according to `host_metadata::hostname_source`.
    #
    # host_metadata:
      ## @param enabled - boolean - optional - default: true
      ## Enable the host metadata functionality
      #
      # enabled: true

      ## @param hostname_source - enum - optional - default: first_resource
      ## Source for the hostname of host metadata.
      ## Valid values are 'first_resource' and 'config_or_system':
      ## - 'first_resource' picks the host metadata hostname from the resource attributes on the first OTLP payload that gets to the exporter.
      ##    If the first payload lacks hostname-like attributes, it will fallback to 'config_or_system' behavior.
      ##    Do not use this hostname source if receiving data from multiple hosts.
      ##
      ## - 'config_or_system' picks the host metadata hostname from the 'hostname' setting, falling back to system and cloud provider APIs.
      ##
      ##  The current default is 'first_resource'.
      #
      # hostname_source: first_resource

      ## @param tags - list of strings - optional - default: empty list
      ## List of host tags to be sent as part of the host metadata.
      ## These tags will be attached to telemetry signals that have the host metadata hostname.
      ## 
      ## To attach tags to telemetry signals regardless of the host, use a processor instead.
      #
      # tags: []


service:
  pipelines:
    traces:
      receivers: [nop]
      processors: [nop]
      exporters: [datadog]
